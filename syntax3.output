<Statement> -> <WhileStatement>
<WhileStatement> -> while <Expression> do { <Statement> } od
Token: Keyword Lexeme: while
 <Expression> -> <Term> <Expression Prime>
  <Term> -> <Factor> <Term Prime>
   <Factor> -> <Identifier>
Token: Identifier Lexeme: i
   <Term Prime> -> ε
  <Expression Prime> -> ε
Syntax Error: Expected 'do' after while condition at token '<' (Operator)
Syntax Error: Unexpected token in statement at token '<' (Operator)
Syntax Error: Unexpected token in statement at token '10' (Integer)
Syntax Error: Unexpected token in statement at token 'do' (Keyword)
<Statement> -> <IfStatement>
<IfStatement> -> if <Expression> then { <Statement> } [ else { <Statement> } ] fi
Token: Keyword Lexeme: if
 <Expression> -> <Term> <Expression Prime>
  <Term> -> <Factor> <Term Prime>
   <Factor> -> <Identifier>
Token: Identifier Lexeme: i
   <Term Prime> -> % <Factor> <Term Prime>
Token: Operator Lexeme: %
    <Factor> -> <Integer>
Token: Integer Lexeme: 2
    <Term Prime> -> ε
  <Expression Prime> -> ε
Syntax Error: Expected 'then' after if condition at token '==' (Operator)
Syntax Error: Unexpected token in statement at token '==' (Operator)
Syntax Error: Unexpected token in statement at token '0' (Integer)
Syntax Error: Unexpected token in statement at token 'then' (Keyword)
<Statement> -> <PutStatement>
<PutStatement> -> put ( <Expression> ) ;
Token: Keyword Lexeme: put
Token: Separator Lexeme: (
 (
 <Expression> -> <Term> <Expression Prime>
  <Term> -> <Factor> <Term Prime>
   <Factor> -> <Identifier>
Token: Identifier Lexeme: i
   <Term Prime> -> ε
  <Expression Prime> -> ε
Token: Separator Lexeme: )
 )
Token: Separator Lexeme: ;
 ;
Syntax Error: Unexpected token in statement at token 'fi' (Keyword)
<Statement> -> <Assign>
<Assign> -> <Identifier> = <Expression> ;
Token: Identifier Lexeme: i
Token: Operator Lexeme: =
 <Expression> -> <Term> <Expression Prime>
  <Term> -> <Factor> <Term Prime>
   <Factor> -> <Identifier>
Token: Identifier Lexeme: i
   <Term Prime> -> ε
  <Expression Prime> -> + <Term> <Expression Prime>
Token: Operator Lexeme: +
   <Term> -> <Factor> <Term Prime>
    <Factor> -> <Integer>
Token: Integer Lexeme: 1
    <Term Prime> -> ε
   <Expression Prime> -> ε
Token: Separator Lexeme: ;
 ;
Syntax Error: Unexpected token in statement at token 'od' (Keyword)
